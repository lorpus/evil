// shared

Map = {
    cameras = {
        {
            pos = Vector(3686.340088, -3400.396484, 332.101929),
            ang = Angle(-15.894459, -20.920872, 0.000000)
        },
        {
            pos = Vector(-1767.516113, -1775.567017, -51.759216),
            ang = Angle(2.582751, 46.886448, 0.000000)
        },
        {
            pos = Vector(3315.077881, 3508.807617, 62.725948),
            ang = Angle(-19.888777, -108.070564, 0.000000)
        }
    },

    spawns = {
        humans = {
            // group 1
            {
                pos = Vector(1757.696899, -1126.045898, 62.031250),
                ang = Angle(8.656085, -56.588203, 0.000000)
            },
            {
                pos = Vector(1973.491089, -1116.482788, 62.031250),
                ang = Angle(7.059331, -82.640579, 0.000000)
            },
            {
                pos = Vector(2205.993164, -1413.909424, 62.031250),
                ang = Angle(1.596734, 174.410370, 0.000000)
            },
            {
                pos = Vector(2159.309082, -1073.515869, 62.031250),
                ang = Angle(4.538134, -127.685936, 0.000000)
            },
            {
                pos = Vector(1901.161133, -928.954041, 62.031250),
                ang = Angle(5.462577, -93.565674, 0.000000)
            },
            {
                pos = Vector(1658.102661, -995.663391, 62.031250),
                ang = Angle(5.966822, -50.369087, 0.000000)
            },
            {
                pos = Vector(1473.739746, -1123.236450, 62.031250),
                ang = Angle(7.983780, -29.443153, 0.000000)
            },
            {
                pos = Vector(1372.361938, -1343.237061, 62.031250),
                ang = Angle(8.403978, -0.029154, 0.000000)
            },
            {
                pos = Vector(2599.621338, -1844.489014, 62.031250),
                ang = Angle(5.462579, 138.384735, 0.000000)
            },
            {
                pos = Vector(2377.684082, -1902.491333, 62.031250),
                ang = Angle(9.244381, 96.028549, 0.000000)
            },

            // group 2
            {
                pos = Vector(3597.175293, 3689.910156, -0.968750),
                ang = Angle(8.247390, -168.343918, 0.000000)
            },
            {
                pos = Vector(3611.630615, 3575.793701, -0.968750),
                ang = Angle(17.367283, 169.087891, 0.000000)
            },
            {
                pos = Vector(3765.508545, 3606.715820, -0.968750),
                ang = Angle(22.445641, 159.249176, 0.000000)
            },
            {
                pos = Vector(3409.538330, 3449.911133, -0.968750),
                ang = Angle(23.819077, 89.838745, 0.000000)
            },
            {
                pos = Vector(3203.574219, 3809.811035, -0.968750),
                ang = Angle(15.259592, -56.213238, 0.000000)
            },
            {
                pos = Vector(3144.229980, 3375.066650, -0.968750),
                ang = Angle(0.897997, -91.679001, 0.000000)
            },
            {
                pos = Vector(3421.869141, 3371.872559, -0.968750),
                ang = Angle(7.934897, 150.169739, 0.000000)
            },
            {
                pos = Vector(2557.006836, 3650.670410, -0.968750),
                ang = Angle(15.714445, 22.324749, 0.000000)
            },
            {
                pos = Vector(2340.667236, 3355.505127, 9.470345),
                ang = Angle(7.838043, -16.795063, 0.000000)
            },
            {
                pos = Vector(3545.188965, 3855.966553, 9.470348),
                ang = Angle(7.049439, -125.842529, 0.000000)
            },
            
            // Group 3
            {
                pos = Vector(3683.518311, -1366.172607, -106.968750),
                ang = Angle(22.829569, 93.530731, 0.000000)
            },
            {
                pos = Vector(3726.730225, -965.304871, -106.968750),
                ang = Angle(18.671885, -48.622627, 0.000000)
            },
            {
                pos = Vector(3979.433838, -992.258484, -106.968750),
                ang = Angle(19.623428, -114.672493, 0.000000)
            },
            {
                pos = Vector(4003.042969, -1373.676270, -106.968750),
                ang = Angle(18.204952, 153.994797, 0.000000)
            },
            {
                pos = Vector(3890.844971, -1106.601196, -106.968750),
                ang = Angle(20.363209, 100.251045, 0.000000)
            },
            {
                pos = Vector(3306.605957, -733.342346, -106.968750),
                ang = Angle(15.156598, -5.488564, 0.000000)
            },
            {
                pos = Vector(3523.171631, -734.400391, -106.968750),
                ang = Angle(20.300087, -106.454475, 0.000000)
            },
            {
                pos = Vector(3508.982910, -935.737427, -106.968750),
                ang = Angle(24.617474, -144.105469, 0.000000)
            },
            {
                pos = Vector(3309.432617, -933.012207, -106.968750),
                ang = Angle(22.034733, -170.870819, 0.000000)
            },
            {
                pos = Vector(3395.771240, -815.705017, -106.968750),
                ang = Angle(24.339664, 56.703979, 0.000000)
            },            

            // Group 4

            {
                pos = Vector(-4739.455078, -3941.082031, -0.968750),
                ang = Angle(0.169661, 46.191711, 0.000000)
            },
            {
                pos = Vector(-4698.390137, -3519.739014, -0.968750),
                ang = Angle(2.690864, -11.795889, 0.000000)
            },
            {
                pos = Vector(-3434.478516, -3465.351074, 1.031250),
                ang = Angle(9.157920, -172.089706, 0.000000)
            },
            {
                pos = Vector(-3735.488037, -3477.530518, 1.031250),
                ang = Angle(2.518762, -8.211685, 0.000000)
            },

            // Group 5

            {
                pos = Vector(-4807.860840, 4814.121094, -0.968750),
                ang = Angle(5.733431, -34.630222, 0.000000)
            },
            {
                pos = Vector(-4812.711426, 4656.548340, -0.968750),
                ang = Angle(7.047194, -33.443111, 0.000000)
            },
            {
                pos = Vector(-4613.388672, 4784.976563, -0.968750),
                ang = Angle(6.624595, -10.083527, 0.000000)
            },
            {
                pos = Vector(-4698.900879, 4530.037598, -0.968750),
                ang = Angle(5.258063, -99.638824, 0.000000)
            },
            {
                pos = Vector(-4810.568359, 4513.742188, -0.968750),
                ang = Angle(13.351396, -51.818466, 0.000000)
            },
            {
                pos = Vector(-4577.520996, 4380.074707, -0.968750),
                ang = Angle(9.888364, -36.054283, 0.000000)
            },
            {
                pos = Vector(-4771.681641, 4127.480957, -0.968750),
                ang = Angle(6.291086, -44.018242, 0.000000)
            },
            {
                pos = Vector(-3983.503662, 4526.952148, -0.968750),
                ang = Angle(-0.065764, 1.915642, 0.000000)
            },
            {
                pos = Vector(-4049.794189, 4191.415527, -0.968750),
                ang = Angle(1.570067, -72.834930, 0.000000)
            },
            
            // group 6
            {
                pos = Vector(-2233.021484, -5616.750977, -0.968750),
                ang = Angle(-2.603592, 51.094421, 0.000000)
            },
            {
                pos = Vector(-2045.358276, -5694.847656, -0.968750),
                ang = Angle(-3.528032, 85.802948, 0.000000)
            },
            {
                pos = Vector(-1880.243652, -5702.953125, -0.968750),
                ang = Angle(-3.107833, 93.870804, 0.000000)
            },
            {
                pos = Vector(-1725.241821, -5685.701172, -0.968750),
                ang = Angle(0.926087, 106.644882, 0.000000)
            },
            {
                pos = Vector(-1580.441406, -5629.037109, -0.968750),
                ang = Angle(2.354767, 139.588531, 0.000000)
            },
            {
                pos = Vector(-1492.965698, -5478.844238, -0.968750),
                ang = Angle(3.027085, 177.280411, 0.000000)
            },
            {
                pos = Vector(-1494.064209, -5315.552734, -0.968750),
                ang = Angle(2.774964, -157.801697, 0.000000)
            },
            {
                pos = Vector(-1629.096436, -5201.538086, -0.968750),
                ang = Angle(3.195165, -141.834061, 0.000000)
            },
            {
                pos = Vector(-1742.674194, -5088.761230, -0.968750),
                ang = Angle(3.111125, -118.260887, 0.000000)
            },
            {
                pos = Vector(-2058.930420, -4974.603516, -0.968750),
                ang = Angle(1.346283, -81.661392, 0.000000)
            },
            {
                pos = Vector(-2363.593750, -5139.437500, -0.968750),
                ang = Angle(1.430323, -45.944370, 0.000000)
            }
        },

        boss = {
            {
                pos = Vector(-3451.154297, 529.374268, 62.031250),
                ang = Angle(1.344637, -15.492799, 0.000000)
            },
            {
                pos = Vector(-1760.968750, -1757.620605, -106.968750),
                ang = Angle(1.004180, 0.306800, 0.000000)
            }
        }
    },

    pages = {
        {
            pos = Vector(1714.497925, -2164.675781, 57.438423),
            ang = Angle(0.000000, -0.000000, 0.000000)
        },
        {
            pos = Vector(-6.998930, 389.759613, 51.042267),
            ang = Angle(358.752258, 126.999985, 0.000000)
        },
        {
            pos = Vector(2927.643799, 4497.230957, 72.793968),
            ang = Angle(0.149238, 297.929047, 0.000000)
        },
        {
            pos = Vector(-2858.808105, 4168.269531, 56.341274),
            ang = Angle(30.708496, 90.000000, 0.000000)
        },
        {
            pos = Vector(-3375.031250, -3496.578857, 52.070492),
            ang = Angle(-0.000000, 180.000000, 0.000000)
        },
        {
            pos = Vector(3042.401855, -1990.031250, 56.236713),
            ang = Angle(-0.000000, 270.000000, 0.000000)
        },
        {
            pos = Vector(-1774.968750, -1755.227661, -59.554497),
            ang = Angle(-0.000000, 0.000000, 0.000000)
        },
        {
            pos = Vector(2826.031250, -1095.938721, -53.046139),
            ang = Angle(-0.000000, 0.000000, 0.000000)
        },
        {
            pos = Vector(3716.083008, -1885.043213, 41.989601),
            ang = Angle(2.348846, 334.759918, 0.000000)
        },
        {
            pos = Vector(750.061584, -3708.877686, 72.009666),
            ang = Angle(357.901703, 217.000015, 0.000000)
        },
        {
            pos = Vector(-2537.122559, 885.783936, 31.319948),
            ang = Angle(0.000003, 0.000002, 0.000000)
        },
        {
            pos = Vector(-406.562134, 1206.854858, 51.161015),
            ang = Angle(358.179962, 47.000187, 0.000000)
        },
        {
            pos = Vector(3046.062988, 3422.470459, 60.742615),
            ang = Angle(-0.000000, 0.000002, 0.000000)
        },
        {
            pos = Vector(2651.307617, 4383.864746, 59.231133),
            ang = Angle(0.000000, 116.500008, 0.000000)
        },
        {
            pos = Vector(-1369.809692, 5002.519531, 55.013760),
            ang = Angle(30.708616, 270.000000, 0.000000)
        }
    },

    InitPostEntity = function() // get rid of the models that are in the map
        if not SERVER then return end
        for _, ent in pairs(ents.FindByModel("models/slender/sheet.mdl")) do
			SafeRemoveEntity(ent)
		end
    end,

    PostCleanUpMap = function()
        if not SERVER then return end
        for _, ent in pairs(ents.FindByModel("models/slender/sheet.mdl")) do
			SafeRemoveEntity(ent)
		end
    end
}
